{"version":3,"sources":["theme/ThemeProvider.js","redux/pageNumberReducer.js","redux/nationalityReducer.js","utils/storageHelper.js","redux/favoritesReducer.js","redux/countriesReducer.js","redux/darkModeReducer.js","components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/UserList/style.js","components/UserItem/style.js","components/UserItem/UserItem.js","redux/actionTypes.js","components/Select/MultipleSelectCheckmarks.js","components/UserList/UserList.js","pages/Home/style.js","pages/Home/Home.js","hooks/usePeopleFetch.js","pages/Favorites/style.js","pages/Favorites/Favorites.js","components/NavBar/NavBar.js","Routing/Routing.js","AppRouter.js","index.js"],"names":["ThemeProvider","children","isDarkMode","useSelector","state","overrides","MuiTab","root","backgroundColor","MuiCssBaseline","width","height","outline","theme","React","useMemo","createMuiTheme","palette","type","primary","main","error","CssBaseline","reducer","action","payload","saveToLocalStorage","key","value","localStorage","setItem","JSON","stringify","getFromLocalStorage","parse","getItem","favorites","emails","reduce","acc","i","email","name","iso2","display","map","country","Text","styled","div","size","bold","Typography","component","Spinner","color","thickness","variant","CircularProgress","CheckBox","onChange","label","useState","checked","setChecked","useEffect","FormControlLabel","control","Checkbox","UserList","List","SpinnerWrapper","img","Filters","isVisible","SelectContainer","User","UserInfo","UserPicture","IconButtonWrapper","UserItem","handleMouseEnter","handleMouseLeave","index","user","lastUserElementRef","hoveredUserId","favoritesEmails","setFavorite","ref","onMouseEnter","onMouseLeave","src","picture","large","alt","title","first","last","location","street","number","city","includes","onClick","IconButton","updateNationality","data","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","MultipleSelectCheckmarks","countries","dispatch","useDispatch","sx","m","id","Select","labelId","multiple","event","target","input","users","isLoading","setHoveredUserId","observer","useRef","nationality","filteredUsers","setFilteredUsers","filter","length","nat","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","threshold","observe","handleValueChange","isChecked","favorite","Home","Content","Header","setUsers","setIsLoading","pageNumber","fetchUsers","a","axios","get","join","toLowerCase","results","usePeopleFetch","Favorites","favoritesToDisplay","setFavoritesToDisplay","favoritesFromStorage","NavBar","sessionStorage","setValue","setIsDarkMode","routes","history","useHistory","saveToSessionStorage","replace","darkModeFromLS","AppBar","position","top","flexDirection","justifyContent","Tabs","_e","newValue","aria-label","indicatorColor","textColor","Tab","className","Routing","exact","path","store","createStore","combineReducers","pageNumberReducer","nationalityReducer","favoritesReducer","countriesReducer","darkModeReducer","AppRouter","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.2ab514f9.chunk.js","sourcesContent":["import React from \"react\";\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { useSelector } from \"react-redux\";\n\nconst ThemeProvider = ({ children }) => {\n  const { isDarkMode } = useSelector(state=>state) \n  const overrides = {\n    MuiTab: {\n      root: {\n        backgroundColor: isDarkMode ? \"#303030\" : \"#ffffff\",\n      },\n    },\n      MuiCssBaseline: {\n        '@global': {\n          '*': {\n            'scrollbar-width': 'thin',\n          },\n          '*::-webkit-scrollbar': {\n            width: '4px',\n            height: '4px',\n          },\n          '*::-webkit-scrollbar-track': {\n            '-webkit-box-shadow': `inset 0 0 6px white`\n          },\n          '*::-webkit-scrollbar-thumb': !isDarkMode && {\n            backgroundColor: '#f06292',\n            outline: '1px solid #f06292'\n          }\n        }\n      }\n  };\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        overrides,\n        palette: {\n          type: isDarkMode ? \"dark\" : \"light\",\n          primary: {\n            main: isDarkMode ? \"#84ffff\" : \"#f06292\",\n          },\n          error: {\n            main: \"#f06292\",\n          },\n        },\n      }),\n    [isDarkMode]\n  );\n\n  return (\n    <Provider theme={theme}>\n      <CssBaseline />\n      {children}\n    </Provider>\n  );\n};\n\nexport default ThemeProvider;\n","const reducer = (state = 1, action) => {\n    switch (action.type) {\n        case \"UPDATE_PAGE_NUMBER\":\n            return (state = state + 1 );   \n        default:\n            return state;\n    }\n};\n\nexport default reducer;","const reducer = (state = [], action) => {\n  switch (action.type) {\n    case \"UPDATE_NATIONALITY\":\n      return (state = action.payload);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export const saveToLocalStorage = (key, value) => {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\nexport const getFromLocalStorage = (key) => {\r\n  return JSON.parse(localStorage.getItem(key));\r\n};\r\n\r\nexport const removeFromLocalStorage = (key) => {\r\n  localStorage.removeItem(key);\r\n};\r\n\r\nexport const saveToSessionStorage = (key, value) => {\r\n  sessionStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\nexport const getFromSessionStorage = (key) => {\r\n  return JSON.parse(sessionStorage.getItem(key));\r\n};\r\n\r\nexport const removeFromSessionStorage = (key) => {\r\n  sessionStorage.removeItem(key);\r\n};\r\n","import { getFromLocalStorage, saveToLocalStorage } from \"../utils/storageHelper\";\r\nconst reducer = (\r\n  state = {\r\n    favorites: getFromLocalStorage(\"favorites\") || [],\r\n    emails: getFromLocalStorage(\"favoriteList\") || [],\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_FAVORITES\":\r\n      saveToLocalStorage(\"favorites\", action.payload);\r\n      const emails = action.payload.reduce((acc, i) => [...acc, i.email], []);\r\n      saveToLocalStorage(\"favoriteList\", emails);\r\n      return (state = { favorites: action.payload, emails });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","const reducer = (\r\n  state = [\r\n    { name: \"Australia\", iso2: \"AU\", display: true },\r\n    { name: \"Brazil\", iso2: \"BR\", display: true },\r\n    { name: \"Canada\", iso2: \"CA\", display: true },\r\n    { name: \"Switzerland\", iso2: \"CH\", display: false },\r\n    { name: \"Germany\", iso2: \"DE\", display: true },\r\n    { name: \"Denmark\", iso2: \"DK\", display: false },\r\n    { name: \"Spain\", iso2: \"ES\", display: false },\r\n    { name: \"Finland\", iso2: \"FI\", display: false },\r\n    { name: \"France\", iso2: \"FR\", display: false },\r\n    { name: \"United Kingdom\", iso2: \"GB\", display: false },\r\n    { name: \"Ireland\", iso2: \"IE\", display: false },\r\n    { name: \"Iran\", iso2: \"IR\", display: false },\r\n    { name: \"The Netherlands\", iso2: \"NL\", display: false },\r\n    { name: \"Norway\", iso2: \"NO\", display: false },\r\n    { name: \"New Zealand\", iso2: \"NZ\", display: false },\r\n    { name: \"Turkey\", iso2: \"TR\", display: false },\r\n    { name: \"United States\", iso2: \"US\", display: true },\r\n  ],\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_SELECTED_COUNTRIES\": {\r\n      return state.map((country) => {\r\n        if (country.name === action.payload) country.display = !country.display;\r\n        return country;\r\n      });\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","const reducer = (state = true, action) => {\n    switch (action.type) {\n    case \"SET_IS_DARK\":\n        return (state = action.payload);\n      default:\n        return state;\n    }\n  };\n  \n  export default reducer;\n  ","import styled from \"styled-components\";\n\nexport const Text = styled.div`\n  font-size: ${({ size }) => size};\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\n`;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport * as S from \"./style\";\n\nconst Text = ({ size = \"14px\", children, bold }) => {\n  return (\n    <Typography component={\"span\"}>\n      <S.Text size={size} bold={bold}>\n        {children}\n      </S.Text>\n    </Typography>\n  );\n};\n\nexport default Text;\n","import React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Spinner = ({ size, color, thickness, variant }) => {\n  return (\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\n  );\n};\n\nexport default Spinner;\n","import styled from \"styled-components\";\n\nexport const CheckBox = styled.div``;\n","import React, { useState, useEffect } from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport * as S from \"./style\";\n\nconst CheckBox = ({ onChange, label, value }) => {\n  const [checked, setChecked] = useState(false);\n\n  const handleChange = () => {\n    setChecked(!checked);\n  };\n\n  useEffect(() => {\n    onChange(value, checked);\n  }, [checked]);\n  return (\n    <S.CheckBox>\n      <FormControlLabel\n        control={<Checkbox checked={checked} onChange={handleChange} color=\"primary\" />}\n        label={label}\n      />\n    </S.CheckBox>\n  );\n};\n\nexport default CheckBox;\n","import styled from \"styled-components\";\n\nexport const UserList = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n`;\n\nexport const List = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 35px;\n  width: 500px;\n  height: calc(100vh - 340px);\n  margin-block-start: 30px;\n  overflow-y: auto;\n`;\n\nexport const User = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n`;\n\nexport const UserInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  max-height: 128px;\n  gap: 2px;\n  overflow: hidden;\n`;\n\nexport const UserPicture = styled.img`\n  border-radius: 45%;\n`;\n\nexport const SpinnerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const IconButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\n  transition: opacity 0.2s ease-in-out;\n`;\n\nexport const Filters = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  max-width: 1200px;\n  justify-content: center;\n  & > * {\n    margin-inline-end: 8px;\n  }\n`;\n\nexport const SelectContainer = styled.div`\n  width: 500px;\n`;","import styled from \"styled-components\";\n\nexport const UserList = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const List = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 35px;\n  width: 500px;\n  height: calc(100vh - 270px);\n  margin-block-start: 30px;\n  overflow-y: auto;\n`;\n\nexport const User = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n`;\n\nexport const UserInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  max-height: 128px;\n  gap: 2px;\n  overflow: hidden;\n`;\n\nexport const UserPicture = styled.img`\n  border-radius: 45%;\n`;\n\nexport const SpinnerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const IconButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\n  transition: opacity 0.2s ease-in-out;\n`;\n\nexport const Filters = styled.div`\n  display: flex;\n  justify-content: center;\n  & > * {\n    margin-inline-end: 8px;\n  }\n`;\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport * as S from \"./style\";\r\n\r\nconst UserItem = ({\r\n  handleMouseEnter,\r\n  handleMouseLeave,\r\n  index,\r\n  user,\r\n  lastUserElementRef,\r\n  hoveredUserId,\r\n  favoritesEmails,\r\n  setFavorite,\r\n}) => {\r\n  return (\r\n    <S.User\r\n      ref={lastUserElementRef} \r\n      key={index}\r\n      onMouseEnter={() => handleMouseEnter(index)}\r\n      onMouseLeave={handleMouseLeave}\r\n    >\r\n      <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n      <S.UserInfo>\r\n        <Text size=\"22px\" bold>\r\n          {user?.name.title} {user?.name.first} {user?.name.last}\r\n        </Text>\r\n        <Text size=\"14px\">{user?.email}</Text>\r\n        <Text size=\"14px\">\r\n          {user?.location.street.number} {user?.location.street.name}\r\n        </Text>\r\n        <Text size=\"14px\">\r\n          {user?.location.city} {user?.location.country}\r\n        </Text>\r\n      </S.UserInfo>\r\n      <S.IconButtonWrapper\r\n        isVisible={index === hoveredUserId || favoritesEmails.includes(user.email)}\r\n        onClick={setFavorite}\r\n      >\r\n        <IconButton>\r\n          <FavoriteIcon color=\"error\" />\r\n        </IconButton>\r\n      </S.IconButtonWrapper>\r\n    </S.User>\r\n  );\r\n};\r\nexport default UserItem;\r\n","export const updateFavorites = (data) => {\n    return {\n        type: \"UPDATE_FAVORITES\",\n        payload: data\n    }\n}\n\nexport const updateSelectedCountries = (data) => {\n    return {\n        type: \"UPDATE_SELECTED_COUNTRIES\",\n        payload: data\n    }\n}\n\nexport const setDarkMode = (data) => {\n    return {\n        type: \"SET_IS_DARK\",\n        payload: data\n    }\n}\n\nexport const updateNationality = (data) => {\n    return {\n        type: \"UPDATE_NATIONALITY\",\n        payload: data\n    }\n}\n\nexport const updatePageNumber = () => {\n    return {\n        type: \"UPDATE_PAGE_NUMBER\",\n    }\n}","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl/FormControl\";\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox/Checkbox\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./style.css\";\nimport { updateSelectedCountries } from \"redux/actionTypes\";\n\nconst ITEM_HEIGHT = 48;\n\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n  anchorOrigin: {\n    vertical: \"bottom\",\n    horizontal: \"left\"\n  },\n  transformOrigin: {\n    vertical: \"top\",\n    horizontal: \"left\"\n  },\n  getContentAnchorEl: null,\n};\n\nconst MultipleSelectCheckmarks = () => {\n  const { countries } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const handleChange = (event) => {\n    const {\n      target: {value},\n    } = event;\n    dispatch( updateSelectedCountries(value[0]));\n  };\n  return (\n    <div>\n      <FormControl sx={{ m: 1, width: 300}}>\n        <InputLabel id=\"multiple-checkbox-label\">\n          &nbsp; Add Your Favorite Countries\n        </InputLabel>\n        <Select\n          labelId=\"multiple-checkbox-label\"\n          id=\"multiple-checkbox\"\n          multiple\n          value={[]}\n          onChange={handleChange}\n          input={<OutlinedInput/>}\n          MenuProps={MenuProps}\n          >\n          {countries.map((country, index) => (\n            <MenuItem key={index} value={country.name}>\n              <Checkbox checked={country.display} />\n              <ListItemText primary={country.name} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>  \n  );\n};\n\nexport default MultipleSelectCheckmarks;\n","import React, { useState, useRef, useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Spinner from \"components/Spinner\";\nimport CheckBox from \"components/CheckBox\";\nimport * as S from \"./style\";\nimport UserItem from \"components/UserItem/UserItem\";\nimport MultipleSelectCheckmarks from \"components/Select/MultipleSelectCheckmarks\";\nimport { updateFavorites, updateNationality, updatePageNumber } from \"redux/actionTypes\";\n\nconst UserList = ({ users, isLoading }) => {\n  const [hoveredUserId, setHoveredUserId] = useState();\n  const observer = useRef();\n  const { nationality, favorites, countries } = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const [filteredUsers, setFilteredUsers] = useState([]);\n\n  useEffect(() => {\n    setFilteredUsers(\n      users.filter((user) =>\n        nationality.length > 0 ? nationality.includes(user.nat) : true\n      )\n    );\n  }, [users, nationality]);\n\n  useEffect(() => {\n    filteredUsers.length === 0 && dispatch(updatePageNumber());\n  }, [filteredUsers]);\n\n  const lastUserElementRef = useCallback((node) => {\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver((entries) => {\n      if (entries[0].isIntersecting) {\n        dispatch(updatePageNumber());\n      }\n    },{threshold: .9});\n    if (node) observer.current.observe(node);\n  }, []);\n\n  const handleMouseEnter = (index) => {\n    setHoveredUserId(index);\n  };\n\n  const handleMouseLeave = () => {\n    setHoveredUserId();\n  };\n\n  const handleValueChange = (value, isChecked) => {\n    dispatch(updateNationality(\n      isChecked\n      ? [...nationality, value]\n      : nationality.filter((country) => country !== value)\n    ));\n  };\n\n  const setFavorite = (user) => {\n    dispatch(updateFavorites(\n      favorites.emails.includes(user.email)\n      ? favorites.favorites.filter((favorite) => favorite.email !== user.email)\n      : [...favorites.favorites, user]\n    ));\n  };\n\n  return (\n    <S.UserList>\n      <S.Filters>\n        {countries.map(\n          (country) =>\n            country.display && (\n              <CheckBox\n                key={country.iso2}\n                value={country.iso2}\n                label={country.name}\n                onChange={handleValueChange}\n              />\n            )\n        )}\n      </S.Filters>\n      <S.SelectContainer>\n        <MultipleSelectCheckmarks/>\n      </S.SelectContainer>\n      <S.List>\n        {filteredUsers.map((user, index, filteredUsers) => {\n          return (\n            <UserItem\n              lastUserElementRef={filteredUsers.length === index + 1 ? lastUserElementRef : null}\n              key={index}\n              index={index}\n              user={user}\n              handleMouseEnter={handleMouseEnter}\n              handleMouseLeave={handleMouseLeave}\n              hoveredUserId={hoveredUserId}\n              favorites={favorites.favorites}\n              favoritesEmails={favorites.emails}\n              setFavorite={() => setFavorite(user)}\n            ></UserItem>\n          );\n        })}\n        {isLoading && (\n          <S.SpinnerWrapper>\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\n          </S.SpinnerWrapper>\n        )}\n      </S.List>\n    </S.UserList>\n  );\n};\n\nexport default UserList;\n","import styled from \"styled-components\";\n\nexport const Home = styled.div`\n  display: flex;\n  height: 100vh;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding-block-start: 100px;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n`;\n\nexport const Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n  max-width: 400px;\n  width: 100%;\n`;\n","import React, { useEffect } from \"react\";\nimport Text from \"components/Text\";\nimport UserList from \"components/UserList\";\nimport { usePeopleFetch } from \"hooks\";\nimport * as S from \"./style\";\nimport { useDispatch } from \"react-redux\";\nimport { updateNationality } from \"redux/actionTypes\";\n\nconst Home = () => {\n  const { users, isLoading } = usePeopleFetch();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(updateNationality([]));\n  }, []);\n\n  return (\n    <S.Home>\n      <S.Content>\n        <S.Header>\n          <Text size=\"64px\" bold>\n            PplFinder\n          </Text>\n        </S.Header>\n        <UserList users={users} isLoading={isLoading} />\n      </S.Content>\n    </S.Home>\n  );\n};\n\nexport default Home;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\n\nexport const usePeopleFetch = () => {\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { pageNumber, nationality } = useSelector((state) => state);\n\n  const fetchUsers = async () => {\n    setIsLoading(true);\n    const { data } = await axios.get(\n      `https://randomuser.me/api/?results=25&page=${pageNumber}${\n        nationality.length > 0 && \"&nat=\" + nationality.join(\",\").toLowerCase()\n      }`\n    );\n    setIsLoading(false);\n    setUsers([...users, ...data.results]);\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, [pageNumber]);\n\n  return { users, isLoading, fetchUsers };\n};\n","import styled from \"styled-components\";\n\nexport const Favorites = styled.div`\n  display: flex;\n  height: 100vh;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding-block-start: 100px;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n`;\n\nexport const Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n  max-width: 400px;\n  width: 100%;\n`;\n","import React, { useEffect, useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport * as S from \"./style\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getFromLocalStorage } from \"../../utils/storageHelper\";\r\nimport { updateNationality } from \"redux/actionTypes\";\r\n\r\nconst Favorites = () => {\r\n  const { favorites } = useSelector((state) => state);\r\n  const [favoritesToDisplay, setFavoritesToDisplay] = useState([]);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(updateNationality([]));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const favoritesFromStorage = getFromLocalStorage(\"favorites\");\r\n    setFavoritesToDisplay(\r\n      favorites.favorites.length <= 0 && favoritesFromStorage\r\n        ? favoritesFromStorage\r\n        : favorites.favorites\r\n    );\r\n  }, [favorites]);\r\n\r\n  return (\r\n    <S.Favorites>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            Your Favorites\r\n          </Text>\r\n        </S.Header>\r\n        <UserList users={favoritesToDisplay} />\r\n      </S.Content>\r\n    </S.Favorites>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { useHistory } from \"react-router\";\nimport './darkMode.css'\nimport { useDispatch } from \"react-redux\";\nimport { setDarkMode } from \"redux/actionTypes\";\nimport { getFromLocalStorage, getFromSessionStorage, saveToLocalStorage, saveToSessionStorage } from \"utils/storageHelper\";\n\nconst NavBar = () => {\n  const [value, setValue] = useState(getFromSessionStorage(\"currentRoute\") || 0);\n  const [isDarkMode, setIsDarkMode] = useState(true);\n\n  const dispatch = useDispatch()\n\n  const handleChange = (_e, newValue) => {\n    setValue(newValue);\n  };\n\n  const routes = [\"home\", \"favorites\"];\n  const history = useHistory();\n\n  useEffect(() => {\n    saveToSessionStorage(\"currentRoute\", value);\n    history.replace(routes[value]);\n  }, [value]);\n\n  const onDarkModeToggle = ({target: {checked}})=>{\n    setIsDarkMode(checked);\n    saveToLocalStorage(\"isDarkMode\", checked);\n  }\n\n  useEffect(()=>{\n    const darkModeFromLS = getFromLocalStorage(\"isDarkMode\") \n    darkModeFromLS !== null && setIsDarkMode(darkModeFromLS);\n  },[])\n  \n  useEffect(()=>{\n    dispatch(setDarkMode(isDarkMode));\n  },[isDarkMode])\n\n  return (\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0, display: 'flex', flexDirection:\"row\", justifyContent: 'space-between' }}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Navigation\"\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n      >\n        \n        <Tab label=\"Home\" index={0} />\n        <Tab label=\"Favorites\" index={1} />\n      </Tabs>\n        <div className=\"wrapper\">\n          <input type=\"checkbox\" checked={isDarkMode} name=\"checkbox\" className=\"switch\" onChange={onDarkModeToggle}/>\n        </div>\n    </AppBar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Home } from \"../pages\";\r\nimport Favorites from \"../pages/Favorites/Favorites\";\r\nimport NavBar from \"../components/NavBar\";\r\n\r\nconst Routing = () => {\r\n  return (\r\n    <Router>\r\n      <NavBar />\r\n      <Switch>\r\n        <Route exact path=\"/home\" component={Home} />\r\n        <Route exact path=\"/favorites\" component={Favorites} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Routing;\r\n","import React from \"react\";\nimport { ThemeProvider } from \"theme\";\nimport { createStore, combineReducers } from \"redux\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport pageNumberReducer from \"redux/pageNumberReducer\";\nimport nationalityReducer from \"redux/nationalityReducer\";\nimport favoritesReducer from \"redux/favoritesReducer\";\nimport countriesReducer from \"redux/countriesReducer\";\nimport darkModeReducer from'redux/darkModeReducer';\nimport Routing from \"Routing/Routing\";\n\nconst store = createStore(\n  combineReducers({\n    pageNumber: pageNumberReducer,\n    nationality: nationalityReducer,\n    favorites: favoritesReducer,\n    countries: countriesReducer,\n    isDarkMode: darkModeReducer\n  })\n);\n\nconst AppRouter = () => {\n  return (\n    <ReduxProvider store={store}>\n      <ThemeProvider>\n        <Routing />\n      </ThemeProvider>\n    </ReduxProvider>\n  );\n};\n\nexport default AppRouter;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport AppRouter from \"AppRouter\";\n\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}